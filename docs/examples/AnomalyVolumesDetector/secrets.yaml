# This config contain tokens and account IDs. This file is provided as an example, use a similar local file.
# ATTENTION! A file with secrets cannot be committed in plain text to the repository or give to anyone!

# How to create Tinkoff API token: https://tinkoff.github.io/investAPI/token/
# After creating token, store it to `userToken` variable or in `TKS_API_TOKEN` environment variable.

# You can find `accountId` number with command: `tksbrokerapi --accounts` and then store it to `userAccount` variable
# or in `TKS_ACCOUNT_ID` environment variable.

# How to create new Telegram bot and receive token: https://core.telegram.org/bots/features#botfather
# After creating bot, store its token to `botToken` variable or in `TKS_BOT_TOKEN` environment variable.
# See also, Telegram auth and some examples: https://core.telegram.org/bots/api#authorizing-your-bot

# How you can find Chat ID for `chatId` variable:
# - when the bot will be created, store its token to the `botToken` variable or in `TKS_BOT_TOKEN` environment variable;
# - join and authorize bot in Telegram (`/start` command);
# - send any message to bot;
# - go to url: https://api.telegram.org/bot<place_your_token_here>/getUpdates
# - find your message in response text and take `id` as `chatId` variable your need.

# Broker account:
userName: "John Doe"  # Your name to identify in log.
userToken: ""  # Place here api-token (`t.*****`). Or stay it empty and use `TKS_API_TOKEN` environment variable.
userAccount: ""  # Place here `accountId` number. Or stay it empty and use `TKS_ACCOUNT_ID` environment variable.
comment: "My-test-account"  # Some additional comment to identify in log. Can be empty.

# Telegram Bot account:
botToken: ""  # Place here TG bot token (`******:***`). Or stay it empty and use `TKS_BOT_TOKEN` environment variable.
chatId: ""  # Telegram Chat ID with authorized user for sending messages.